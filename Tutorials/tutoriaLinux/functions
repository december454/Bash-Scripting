#! /bin/bash

# A life simulator
#Call script with ./functions <name> <number>

###REVIEW:
# arguments
# variables
# testing and control flow
# interation
# functions
# read (take in user input and store in variables)
# exit codes

numRequiredArgs=2
numArgs=$#

#Do we have enough argments?
if [ $numArgs -lt $numRequiredArgs ]; then
	echo "Not enough args. Call this script with ${0} <name> <number>"
	exit 1
fi

#Set variables with args
name=$1
number=$2
echo "Your first two arguments are $1 and $2."


##############################################
#for loops, iteration, string interpolation
echo "You ran this program with ${numArgs} arguments, here they are:"
for arg in "$@"; do
	echo "$arg"
done


#Two ways to define a function:

#First way.
spaced() {
	#Parameters are not named; they are positional.
	echo
	echo "################"
	echo "$1"
	echo "################"
	echo
}

#Second way.
function guessNum() {
	#Testing the conditionals.
	if [[ $number -eq 99 ]]; then
		spaced "You guessed the number!"
	elif (( number < 10 )); then
		spaced "You guessed wrong!"

		#Set a variable interactively.
		echo "Hi ${name}, to avoid losing, please enter the password:"
		read -r password

		if [[ "$password" == "password" ]]; then
			spaced "You entered the correct password."
		else
			spaced "Wrong password, you lose."
		fi
	fi
}

guessNum "$number"
exit 0
